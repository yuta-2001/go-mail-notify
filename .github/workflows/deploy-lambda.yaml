name: deploy to lambda

on:
  workflow_call:
  workflow_dispatch:
    secrets:
      AWS_REGION:
        required: true
        type: string
      AWS_ACCOUNT_ID:
        required: true
        type: string
      AWS_ROLE_NAME:
        required: true
        type: string
      ECR_REPOSITORY:
        required: true
        type: string
      LAMBDA_FUNCTION_NAME:
        required: true
        type: string

jobs:
  aws-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_ROLE_NAME }}

      - name: login ECR
        uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr

      - name: Push image to ECR and update Lambda function
        id: build-image
        working-directory: go
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
          REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: |
          docker build --target prod -t ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }} .
          docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
          aws lambda update-function-code --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} --architectures arm64 --image ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
